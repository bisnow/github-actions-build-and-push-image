name: 'Build and push image to ECR'
description: 'Build and push image to ECR'
inputs:
  aws-account:
    description: 'AWS Account to use'
    required: true
  registry:
    description: 'ECR registry'
    required: true
  build-args:
    description: 'Build args to pass to docker build'
    required: false
  composer-oauth:
    description: 'Composer oauth token'
    required: false
    default: ''
  flux-license-key:
    description: 'Flux license key from https://fluxui.dev/dashboard'
    required: false
    default: ''
  flux-username:
    description: 'Email on Flux account'
    required: false
    default: ''
  image-tag:
    description: 'Tag to use for the image'
    required: false
    default: latest
  platforms:
    description: 'Platforms to build for'
    required: false
    default: linux/amd64,linux/arm64
  dev-package:
    description: 'Dev package to install'
    required: false
    default: no
  no-composer:
    description: 'Do not run composer install'
    required: false
    default: ''
  build-assets:
    description: 'Build assets'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
      - name: Use Node.js
        if: ${{ inputs.build-assets != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Assume role for AWS Account
        uses: bisnow/github-actions-assume-role-for-environment@main
        with:
          aws-account: ${{ inputs.aws-account }}
      - name: Add Flux license
        if: ${{ inputs.flux-license-key != '' && inputs.flux-username != '' }}
        shell: bash
        run: composer config http-basic.composer.fluxui.dev "${{ inputs.flux-username }}" "${{ inputs.flux-license-key }}"
      - name: Install dependencies with oauth
        if: ${{ inputs.no-composer == '' && inputs.composer-oauth != '' }}
        uses: php-actions/composer@v6
        env:
          COMPOSER_AUTH: "{\"github-oauth\":{\"github.com\":\"${{ inputs.composer-oauth }}\"}}"
        with:
          dev: ${{ inputs.dev-package }}
          args: --profile --ignore-platform-reqs --optimize-autoloader
          memory_limit: -1
      - name: Install dependencies no oauth
        if: ${{ inputs.no-composer == '' && inputs.composer-oauth == '' }}
        uses: php-actions/composer@v6
        with:
          dev: ${{ inputs.dev-package }}
          args: --profile --ignore-platform-reqs --optimize-autoloader
          memory_limit: -1
      - name: Build Assets
        if: ${{ inputs.build-assets != '' }}
        shell: bash
        run: |
          npm install
          npm run production
        env:
          BUILD: ${{ inputs.image-tag }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Remove DOCKER_ENV file
        shell: bash
        run: rm -f DOCKER_ENV
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: true
          build-args: ${{ inputs.build-args }}
          tags: ${{ inputs.registry }}:${{ github.sha }},${{ inputs.registry }}:${{ inputs.image-tag }}
